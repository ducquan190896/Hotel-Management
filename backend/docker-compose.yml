version: '3'

networks:
  kafka-net:
    name: kafka-net
    driver: bridge


services:
  app: 
    image: quan/hotel:latest
    build:
      context: .
    container_name: app
    restart: always
    ports:
      - 8080:8080
    expose:
      - 8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/hotel-management
      - SPRING_DATASOURCE_USERNAME=quan
      - SPRING_DATASOURCE_PASSWORD=1996
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    depends_on:
      - db
  
  db:
    image: 'postgres:13.1-alpine'
    container_name: db
    restart: always
    ports:
      - 5432:5432
    expose:
      - 5432
    environment: 
      - POSTGRES_USER=quan
      - POSTGRES_PASSWORD=1996
      - POSTGRES_DB=hotel-management
    volumes:
      - pgdata:/var/lib/postgresql/data
 
  zookeeper:
    image: zookeeper:3.7.0
    container_name: zookeeper
    restart: always
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: always
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: DOCKER_INTERNAL:PLAINTEXT,DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: DOCKER_INTERNAL://:29092,DOCKER_EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: DOCKER_INTERNAL://kafka:29092,DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  pgdata: {}